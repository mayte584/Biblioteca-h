/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Main.java to edit this template
 */
package interfazbibliotecas;

/**
 *
 * @author 102ru
 */
import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.util.ArrayList;

public class InterfazBibliotecas extends JFrame {
    private final Biblioteca biblioteca;
    private JTextArea textArea;

    public InterfazBibliotecas() {
        biblioteca = new Biblioteca();
        initUI();
    }

    private void initUI() {
        setTitle("Gestión de Biblioteca");
        setSize(400, 300);
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        setLayout(new BorderLayout());

        // Panel de entrada
        JPanel inputPanel = new JPanel();
        inputPanel.setLayout(new GridLayout(5, 2)); // Cambiado a 5 filas para incluir el botón de salir

        JLabel tituloLabel = new JLabel("Título:");
        JTextField tituloField = new JTextField();
        JLabel autorLabel = new JLabel("Autor:");
        JTextField autorField = new JTextField();

        JButton agregarButton = new JButton("Agregar Libro");
        JButton eliminarButton = new JButton("Eliminar Libro");
        JButton listarButton = new JButton("Listar Libros");
        JButton buscarButton = new JButton("Buscar Libro");
        JButton salirButton = new JButton("Salir"); // Botón de salir

        inputPanel.add(tituloLabel);
        inputPanel.add(tituloField);
        inputPanel.add(autorLabel);
        inputPanel.add(autorField);
        inputPanel.add(agregarButton);
        inputPanel.add(eliminarButton);
        inputPanel.add(listarButton);
        inputPanel.add(buscarButton);
        inputPanel.add(new JLabel()); // Espacio vacío para alinear el botón de salir
        inputPanel.add(salirButton);

        // Área de texto para mostrar resultados
        textArea = new JTextArea();
        textArea.setEditable(false);
        JScrollPane scrollPane = new JScrollPane(textArea);

        // Añadir paneles a la ventana
        add(inputPanel, BorderLayout.NORTH);
        add(scrollPane, BorderLayout.CENTER);

        // Manejadores de eventos
        agregarButton.addActionListener((ActionEvent e) -> {
            String titulo = tituloField.getText();
            String autor = autorField.getText();
            biblioteca.agregarLibro(titulo, autor);
            textArea.append("Libro agregado: " + titulo + " - " + autor + "\n");
        });

        eliminarButton.addActionListener((ActionEvent e) -> {
            String titulo = tituloField.getText();
            biblioteca.eliminarLibro(titulo);
            textArea.append("Libro eliminado: " + titulo + "\n");
        });

        listarButton.addActionListener((ActionEvent e) -> {
            String listado = biblioteca.listarLibros();
            textArea.setText("Listado de libros:\n" + listado);
        });

        buscarButton.addActionListener((ActionEvent e) -> {
            String titulo = tituloField.getText();
            boolean encontrado = biblioteca.buscarLibro(titulo);
            if (encontrado) {
                textArea.append("Libro encontrado: " + titulo + "\n");
            } else {
                textArea.append("Libro no encontrado: " + titulo + "\n");
            }
        });

        // Manejador de eventos para el botón de salir
        salirButton.addActionListener((ActionEvent e) -> {
            System.exit(0); // Cierra la aplicación
        });
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> {
            new InterfazBibliotecas().setVisible(true);
        });
    }
}

class Biblioteca {
    private ArrayList<Libro> libros;

    public Biblioteca() {
        libros = new ArrayList<>();
    }

    public void agregarLibro(String titulo, String autor) {
        libros.add(new Libro(titulo, autor));
    }

    public void eliminarLibro(String titulo) {
        libros.removeIf(libro -> libro.getTitulo().equals(titulo));
    }

    public String listarLibros() {
        StringBuilder listado = new StringBuilder();
        for (Libro libro : libros) {
            listado.append(libro.getTitulo()).append(" - ").append(libro.getAutor()).append("\n");
        }
        return listado.toString();
    }

    public boolean buscarLibro(String titulo) {
        for (Libro libro : libros) {
            if (libro.getTitulo().equals(titulo)) {
                return true;
            }
        }
        return false;
    }
}

class Libro {
    private String titulo;
    private String autor;

    public Libro(String titulo, String autor) {
        this.titulo = titulo;
        this.autor = autor;
    }

    public String getTitulo() {
        return titulo;
    }

    public String getAutor() {
        return autor;
    }
}
